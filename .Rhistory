debugSource("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
exists(veglist)
View(veglist)
veglist
View(veglist)
View(veglist)
exists(veglist)
exists("veglist")
debugSource("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
data_path = file.path(data_path_root,veg_dpid,"neon-aop-products",year,
"FullSite",domain,fullSite,"L1","veg_str", "filesToStack10098")
data_path = file.path(data_path_root,veg_dpid,"neon-aop-products",year,
"FullSite",domain,fullSite,"L1","veg_str", "filesToStack10098")
debugSource("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
is.na(zip_file)
is.na(zip_file)[1]
is.na(zip_file)[0]
zipsByProduct(dpID=dpID, site=site, startdate=startdate, enddate=enddate, package="basic",
release="current", timeIndex="all", tabl="all", check.size=FALSE, nCores = nCores,
savepath=data_path, load=TRUE)
zipsByProduct(dpID=dpID, site=site, startdate=startdate, enddate=enddate, package="basic",
release="current", timeIndex="all", tabl="all", check.size=FALSE,
savepath=data_path, load=TRUE)
zipsByProduct(dpID=veg_dpid, site=site, startdate=startdate, enddate=enddate, package="basic",
release="current", timeIndex="all", tabl="all", check.size=FALSE,
savepath=data_path, load=TRUE)
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=FALSE)
data_path
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=FALSE)
zip_file = list.files(path = data_path, pattern = '*.zip')
zip_file
zip_file[1]
data_path
zip_file = list.files(path = data_path, pattern = '*.zip')
zip_files[1]
)    zip_file = list.files(path = data_path, pattern = '*.zip')
)    zip_file = list.files(path = data_path, pattern = "*.zip")
zip_file = list.files(path = data_path, pattern = "*.zip")
zip_file
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=FALSE)
nCores
nCores = 6
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=FALSE)
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
Q
Q
Q
Q
source("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
zip_file = list.files(path = data_path, pattern = '*.zip', recursive = TRUE)
zip_files
zip_file
list.files(path = data_path, pattern = '*.zip', recursive = TRUE)
list.files(path = data_path, pattern = '*.zip', recursive = TRUE)[1]
zipsByProduct(dpID=veg_dpid, site=site, startdate=startdate, enddate=enddate, package="basic",
release="current", timeIndex="all", tabl="all", check.size=FALSE,
savepath=data_path, load=TRUE)
file.exists(data_path)
data_path
data_path = file.path(data_path_root,veg_dpid,"neon-aop-products",year,
"FullSite",domain,fullSite,"L1","veg_str")
file.exists(data_path)
zip_file = list.files(path = data_path, pattern = '*.zip', recursive = TRUE)
(is.na(zip_file[1]))
zipsByProduct(dpID=veg_dpid, site=site, startdate=startdate, enddate=enddate, package="basic",
release="current", timeIndex="all", tabl="all", check.size=FALSE,
savepath=data_path, load=TRUE)
out <- stackByTable(filepath= data_path,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
out <- stackByTable(filepath= file_path(data_path,substr(veg_dpID, 5, 9)),
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
out <- stackByTable(filepath= file.path(data_path,substr(veg_dpID, 5, 9)),
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
out <- stackByTable(filepath= file.path(data_path,substr(veg_dpid, 5, 9)),
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
file.path(data_path,substr(veg_dpid, 5, 9)
)
file.path(data_path,paset("filestostack",substr(veg_dpid, 5, 9))
)
file.path(data_path,pasTE)("filestostack",substr(veg_dpid, 5, 9))
file.path(data_path,paste("filestostack",substr(veg_dpid, 5, 9))
)
file.path(data_path,paste("filestostack",substr(veg_dpid, 5, 9), sep = ''))
out <- stackByTable(filepath= file.path(data_path,paste("filestostack",substr(veg_dpid, 5, 9), sep =''),
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
)
filepath= file.path(data_path,paste("filestostack",substr(veg_dpid, 5, 9), sep =''))
filepath
zip_file
zip_file[1]
zip_file = list.files(path = data_path, pattern = '*.zip', recursive = TRUE)
zip_file[1]
zip_file = list.files(path = data_path, pattern = '*.zip', recursive = TRUE, full.names = TRUE)
zip_file
out <- stackByTable(filepath= zip_files,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
zip_file = list.files(path = data_path, pattern = '*.zip', recursive = TRUE, full.names = TRUE)
out <- stackByTable(filepath= zip_file,
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
basename(zip_file)
pathname(zip_file)
dirname(zip_file)
out <- stackByTable(filepath= dirname(zip_file),
savepath="./data", folder=TRUE, nCores=nCores,
saveUnzippedFiles=TRUE)
debugSource("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
veglist <- loadByProduct(dpID="DP1.10098.001",
site=site,
package="basic",
check.size = FALSE)
site
View(veglist)
veglist <- loadByProduct(dpID="DP1.10098.001",
site=site,
startdate=startdate,
enddate=enddate
package="basic",
veglist <- loadByProduct(dpID="DP1.10098.001",
site=site,
startdate=startdate,
enddate=enddate,
package="basic",
nCores = nCores
check.size = FALSE)
veglist <- loadByProduct(dpID="DP1.10098.001",
site=site,
startdate=startdate,
enddate=enddate,
package="basic",
nCores = nCores,
check.size = FALSE)
veglist <- loadByProduct(dpID="DP1.10098.001",
site=site,
startdate=startdate,
enddate=enddate,
package="basic",
nCores = nCores,
check.size = FALSE)
exists("veglist")
source("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
debugSource("F:/NEON/Tutorials/R/VegStrCHMR/NEON_chm_analysis.R", echo=TRUE)
chm10.values
CHM10.values
CHM10
CHM10.names
binCHM
png(paste0(resultsDir, fullSite, "_low_res_chm.png"),  width = 800, height = 600)
pLim = c(min(min(vegbin$height, na.rm = TRUE), min(binCHM, na.rm = TRUE)),
max(max(vegbin$height, na.rm = TRUE), max(binCHM, na.rm = TRUE)))
plot(binCHM~vegbin$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = paste0(c(fullSite, "Low Res CHM")))
lines(c(0,50), c(0,50),col="black", lwd = 3)
dev.off()
png(paste0(resultsDir, fullSite, "_low_res_chm.png"),  width = 800, height = 600)
plot(binCHM~vegbin$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = paste0(c(fullSite, "Low Res CHM")))
lines(c(0,50), c(0,50),col="black", lwd = 3)
dev.off()
which(!is.na(vegfil$height))
View(flt_bndry)
View(flt_bndry)
x1 = vegsub$height
x1
x2 = vegbin$height
x2
symbols(veg$adjEasting,
veg$adjNorthing,
circles=veg$adjCoordinateUncertainty, asp = 1,
xlab="Easting", ylab="Northing",
main = c(fullSite, 'Tree Locations and Diameters'),
inches=0.1, fg="lightblue")
symbols(veg$adjEasting,
veg$adjNorthing,
circles=veg$stemDiameter/100/2, asp = 1,
inches=.1, add = T)
paste0(resultsDir, fullSite, '_tree_locations.png')
png(paste0(resultsDir, fullSite, '_tree_locations.png'), width = 800, height = 600)
symbols(veg$adjEasting,
veg$adjNorthing,
circles=veg$adjCoordinateUncertainty, asp = 1,
xlab="Easting", ylab="Northing",
main = c(fullSite, 'Tree Locations and Diameters'),
inches=0.1, fg="lightblue")
symbols(veg$adjEasting,
veg$adjNorthing,
circles=veg$stemDiameter/100/2, asp = 1,
inches=.1, add = T)
dev.off()
rgb = brick(RGB_file)
ext = extent(c(min(veg$adjEasting-20,  na.rm = TRUE), max(veg$adjEasting+20,  na.rm = TRUE),
min(veg$adjNorthing-20, na.rm = TRUE), max(veg$adjNorthing+20, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = TRUE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
ext = extent(c(min(veg$adjEasting-20,  na.rm = TRUE), max(veg$adjEasting+20,  na.rm = TRUE),
min(veg$adjNorthing-20, na.rm = TRUE), max(veg$adjNorthing+20, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = TRUE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
## -------Live-trees------------------------------------------------------------------------------------------
vegfil <- vegfil[which(vegfil$plantStatus=="Live"),]
filterCHM <- extract(chm, cbind(vegfil$adjEasting, vegfil$adjNorthing),
buffer=vegfil$adjCoordinateUncertainty+1, fun=max)
png(filename = paste0(resultsDir, fullSite,"_livingtrees.png"), width = 800, height = 600)
plot.window(xlim = pLim, ylim = pLim)
plot(filterCHM~vegfil$height, pch=20, #bufferCHM~vegsub$height
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, "Living Trees"))
lines(c(0,50), c(0,50), col="black", lwd = 3)
dev.off()
print(paste0("Live trees: ", cor(filterCHM,vegfil$height)))
## plot the RGB image, overlay with the tree circles and add the plot boxes
## limit the extent to the area of veg
rgb = brick(RGB_file)
png(paste0(resultsDir, fullSite, "_tree_locations.png"),
width = 1000, height = 600, unit = 'px')
ext = extent(c(min(veg$adjEasting-20,  na.rm = TRUE), max(veg$adjEasting+20,  na.rm = TRUE),
min(veg$adjNorthing-20, na.rm = TRUE), max(veg$adjNorthing+20, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = TRUE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
write.csv(veg, paste0(resultsDir, paste0(fullSite,'_vegfil.csv')))
## plot the outlines of the NEON field sampling plots.
## read in the shape file with the field sampling boundaries
aop_shp = readOGR("F:/NEON/Site_data/AOP_flightboxesAllSites.shp")
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = TRUE)
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
ext_mgn = 40
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = TRUE)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = 1)
ext
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = FALSE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = FALSE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = [TRUE, FALSE], margins = TRUE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = TRUE, margins = TRUE, asp = 1)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
axix(1)
axis(1)
axis(2)
axis(2, outer = FALSE)
axis(2, outer = TRUE)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
axis(2, outer = FALSE)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE)
axis(2, outer = FALSE)
axis(1, outer = FALSE)
ext
ext_mgn = 0
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE)
)sldkjf
ext_mgn = 0
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
ext
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE)
axis(1, outer = FALSE)
axis(2, outer = FALSE)
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE)
axis(2, outer = FALSElabels = '')
axis(2, outer = FALSE, labels = '')
axis(3, outer = FALSE, labels = FALSE)
axis(4, outer = FALSE, labels = FALSE)
axis(1)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
width = 1000, height = 600, unit = 'px')
ext_mgn = 40  ## extra margin so all the circles are shown completely
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
axis(1)
axis(1, line = 0 )
axis(2, line = 0 )
axis(3, labels = FALSE )
axis(4, labels = FALSE )
rgb = brick(RGB_file)
png(paste0(resultsDir, fullSite, "_tree_locations.png"),
width = 1000, height = 600, unit = 'px')
ext_mgn = 40  ## extra margin so all the circles are shown completely
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
## TODO: figure out how to properly place the axes on the plot
axis(1)
axis(2)
axis(3, labels = FALSE)
axis(4, labels = FALSE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
png(paste0(resultsDir, fullSite, "_tree_locations.png"),
width = 1500, height = 900, unit = 'px')
ext_mgn = 40  ## extra margin so all the circles are shown completely
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
## TODO: figure out how to properly place the axes on the plot
axis(1)
axis(2)
axis(3, labels = FALSE)
axis(4, labels = FALSE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
## plot the RGB image, overlay with the tree circles and add the plot boxes
## limit the extent to the area of veg
rgb = brick(RGB_file)
png(paste0(resultsDir, fullSite, "_tree_locations.png"),
width = 1000, height = 600, unit = 'px')
ext_mgn = 40  ## extra margin so all the circles are shown completely
ext = extent(c(min(veg$adjEasting-ext_mgn,  na.rm = TRUE), max(veg$adjEasting+ext_mgn,  na.rm = TRUE),
min(veg$adjNorthing-ext_mgn, na.rm = TRUE), max(veg$adjNorthing+ext_mgn, na.rm = TRUE)))
plotRGB(rgb,
ext = ext,
xlab = "UTM X (m)", ylab = "UTM Y (m)",
main = c(fullSite, "Tree Centers in Red"),
axes = FALSE, margins = TRUE, asp = 1)
## TODO: figure out how to properly place the axes on the plot
axis(1)
axis(2)
axis(3, labels = FALSE)
axis(4, labels = FALSE)
symbols(vegfil$adjEasting,
vegfil$adjNorthing,
circles=vegfil$stemDiameter/100/2, inches = 0.1,
lwd = 2, fg = 'red',
add = TRUE)
dev.off()
pLim = c(min(min(vegsub$height, na.rm = TRUE), min(bufferCHM, na.rm = TRUE)),
max(max(vegsub$height, na.rm = TRUE), max(bufferCHM, na.rm = TRUE)))
pLim
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
dev.off()
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
plim = [0., 12.]
plim = c[0., 12.]
plim = c(0., 12.)
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
dev.off()
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
plim
pLim
pLim = c(0., 12.)
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
pLim = c(0.0, ##min(min(vegsub$height, na.rm = TRUE), min(bufferCHM, na.rm = TRUE)),
max(max(vegsub$height, na.rm = TRUE), max(bufferCHM, na.rm = TRUE)))
pLim
ceiling(11.9)
plim = NULL
plot(bufferCHM~vegsub$height, pch=20,
xlim = pLim, ylim = pLim,
xlab = xLab, ylab = yLab,
main = c(fullSite, 'All Trees'))
lines(c(0,50), c(0,50), col="black", lwd = 3)
x = hist(vegsub$height)
x
y = hist(bufferCHM)
min(vegsub$height)
min(vegsub$height, na.rm = TRUE)
